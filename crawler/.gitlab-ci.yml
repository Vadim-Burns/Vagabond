# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

stages:
  - test
  - build
  - publish
  - deploy

sast:
  stage: test

build-jar:
  stage: build
  image: maven
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - mvn clean package -DskipTests=true
  artifacts:
    expire_in: 30 days
    paths:
      - target/crawler.jar

publish-docker:
  stage: publish
  image: docker
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  services:
    - docker:dind
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST  .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST

deploy:
  stage: deploy
  tags:
    - prod
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $TAG_COMMIT
    - source /home/gitlab-runner/crawler.config
    - docker stop crawler || echo "no crawler container found"
    - docker rm crawler || echo "no crawler container found"
    - docker run -d --name=crawler --network=host --log-driver json-file --log-opt max-size=1g --log-opt max-file=2 -p 127.0.0.1:8080:8080 -e DB_HOST=$DB_HOST -e DB_PORT=$DB_PORT -e DB_NAME=$DB_NAME -e DB_USERNAME=$DB_USERNAME -e DB_PASSWORD=$DB_PASSWORD -e HTTP_IO_THREAD_COUNT=$HTTP_IO_THREAD_COUNT -e TRANSACTIONAL_THREAD_COUNT=$TRANSACTIONAL_THREAD_COUNT -e CRAWLER_THREAD_COUNT=$CRAWLER_THREAD_COUNT -e INDEXER_THREAD_COUNT=$INDEXER_THREAD_COUNT $TAG_COMMIT

